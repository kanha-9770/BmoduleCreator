generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FormModule {
  id          String   @id @default(cuid())
  name        String
  description String?
  icon        String?
  color       String?
  settings    Json     @default("{}") // GIN index to be added via migration
  
  // Hierarchical fields
  parentId    String?  @map("parent_id")
  parent      FormModule? @relation("ModuleHierarchy", fields: [parentId], references: [id])
  children    FormModule[] @relation("ModuleHierarchy")
  moduleType  String   @default("standard") @map("module_type") // "master", "child", "standard"
  level       Int      @default(0)
  path        String?
  isActive    Boolean  @default(true) @map("is_active")
  sortOrder   Int      @default(0) @map("sort_order")
  
  forms       Form[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  // Lookup relations
  lookupSources LookupSource[]
  
  @@map("form_modules")
  @@index([parentId])
  @@index([level])
  @@index([sortOrder])
  @@index([moduleType])
}

model Form {
  id                String   @id @default(cuid())
  moduleId          String   @map("module_id")
  module            FormModule @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  name              String
  description       String?
  settings          Json     @default("{}") // GIN index to be added
  tableMapping      FormTableMapping? @relation("FormToTableMapping")
  sections          FormSection[]
  records1          FormRecord1[] @relation("FormRecord1")
  records2          FormRecord2[] @relation("FormRecord2")
  records3          FormRecord3[] @relation("FormRecord3")
  records4          FormRecord4[] @relation("FormRecord4")
  records5          FormRecord5[] @relation("FormRecord5")
  records6          FormRecord6[] @relation("FormRecord6")
  records7          FormRecord7[] @relation("FormRecord7")
  records8          FormRecord8[] @relation("FormRecord8")
  records9          FormRecord9[] @relation("FormRecord9")
  records10         FormRecord10[] @relation("FormRecord10")
  records11         FormRecord11[] @relation("FormRecord11")
  records12         FormRecord12[] @relation("FormRecord12")
  records13         FormRecord13[] @relation("FormRecord13")
  records14         FormRecord14[] @relation("FormRecord14")
  records15         FormRecord15[] @relation("FormRecord15")
  events            FormEvent[]
  isPublished       Boolean  @default(false) @map("is_published")
  publishedAt       DateTime? @map("published_at")
  formUrl           String?  @map("form_url")
  allowAnonymous    Boolean  @default(true) @map("allow_anonymous")
  requireLogin      Boolean  @default(false) @map("require_login")
  maxSubmissions    Int?     @map("max_submissions")
  submissionMessage String?  @map("submission_message")
  conditional       Json?    // GIN index to be added
  styling           Json?    // GIN index to be added
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  
  // Lookup relations
  lookupSources     LookupSource[]
  isUserForm        Boolean? @default(false)
  isEmployeeForm    Boolean? @default(false)
  
  @@map("forms")
  @@index([moduleId])
  @@index([isPublished])
  @@index([isUserForm])
  @@index([isEmployeeForm])
}

model FormTableMapping {
  id           String   @id @default(cuid())
  formId       String   @unique @map("form_id")
  form         Form     @relation("FormToTableMapping", fields: [formId], references: [id], onDelete: Cascade)
  storageTable String   @map("storage_table") // e.g., 'form_records_1'
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_table_mappings")
  @@index([formId])
  @@index([storageTable])
}

model FormSection {
  id          String      @id @default(cuid())
  formId      String      @map("form_id")
  form        Form        @relation(fields: [formId], references: [id], onDelete: Cascade)
  title       String
  description String?
  order       Int         @default(0)
  columns     Int         @default(1)
  visible     Boolean     @default(true)
  collapsible Boolean     @default(false)
  collapsed   Boolean     @default(false)
  conditional Json?       // GIN index to be added
  styling     Json?       // GIN index to be added
  fields      FormField[]
  subforms    Subform[]
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  @@map("form_sections")
  @@index([formId])
  @@index([order])
}

model FormField {
  id           String       @id @default(cuid())
  sectionId    String?      @map("section_id")
  section      FormSection? @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  subformId    String?      @map("subform_id")
  subform      Subform?     @relation(fields: [subformId], references: [id], onDelete: Cascade)
  type         String
  label        String
  placeholder  String?
  description  String?
  defaultValue String?      @map("default_value")
  options      Json         @default("[]") // GIN index to be added
  validation   Json         @default("{}") // GIN index to be added
  visible      Boolean      @default(true)
  readonly     Boolean      @default(false)
  width        String       @default("full")
  order        Int          @default(0)
  conditional  Json?        // GIN index to be added
  styling      Json?        // GIN index to be added
  properties   Json?        // GIN index to be added
  formula      String?
  rollup       Json?        // GIN index to be added
  lookup       Json?        // GIN index to be added
  
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @updatedAt @map("updated_at")
  
  // Lookup relations
  lookupRelations LookupFieldRelation[]
  
  @@map("form_fields")
  @@index([sectionId])
  @@index([subformId])
  @@index([type])
  @@index([order])
}

// UPDATED: Enhanced Subform model with nested support
model Subform {
  id              String      @id @default(cuid())
  sectionId       String?     @map("section_id")
  section         FormSection? @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  
  // NEW: Support for nested subforms
  parentSubformId String?     @map("parent_subform_id")
  parentSubform   Subform?    @relation("SubformHierarchy", fields: [parentSubformId], references: [id], onDelete: Cascade)
  childSubforms   Subform[]   @relation("SubformHierarchy")
  
  name            String
  description     String?
  order           Int         @default(0)
  level           Int         @default(0) // NEW: Nesting level (0 = root, 1 = first nested, etc.)
  path            String?     // NEW: Hierarchical path like "1.2.3"
  
  // Visual and behavior properties
  columns         Int         @default(1)
  visible         Boolean     @default(true)
  collapsible     Boolean     @default(true)
  collapsed       Boolean     @default(false)
  
  // Styling for different nesting levels
  styling         Json?       // Custom styling based on nesting level
  conditional     Json?       // Conditional logic
  
  fields          FormField[]
  records         SubformRecord[]
  
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime    @updatedAt @map("updated_at")
  
  @@map("subforms")
  @@index([sectionId])
  @@index([parentSubformId])
  @@index([order])
  @@index([level])
  @@index([path])
}

model SubformRecord {
  id          String   @id @default(cuid())
  subformId   String   @map("subform_id")
  subform     Subform  @relation(fields: [subformId], references: [id], onDelete: Cascade)
  data        Json     @default("{}") // GIN index to be added
  employee_id String?  // For payroll/attendance
  amount      Decimal? // For payroll amounts
  date        DateTime? // For attendance dates
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  @@map("subform_records")
  @@index([subformId])
  @@index([employee_id])
  @@index([date])
}

model FormRecord1 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord1", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?  // For payroll/attendance
  amount       Decimal? // For payroll amounts
  date         DateTime? // For attendance dates
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_1")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord2 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord2", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_2")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord3 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord3", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_3")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord4 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord4", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_4")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord5 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord5", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_5")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord6 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord6", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_6")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord7 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord7", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_7")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord8 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord8", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_8")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord9 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord9", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_9")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord10 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord10", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_10")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord11 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord11", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_11")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord12 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord12", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_12")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord13 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord13", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_13")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord14 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord14", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_14")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord15 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord15", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data") // GIN index to be added
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("form_records_15")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormEvent {
  id        String   @id @default(cuid())
  formId    String   @map("form_id")
  form      Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  eventType String   @map("event_type")
  payload   Json     @default("{}") // GIN index to be added
  sessionId String?  @map("session_id")
  userAgent String?  @map("user_agent")
  ipAddress String?  @map("ip_address")
  createdAt DateTime @default(now()) @map("created_at")
  
  @@map("form_events")
  @@index([formId])
  @@index([eventType])
  @@index([createdAt])
}

model FieldType {
  id           String   @id @default(cuid())
  name         String   @unique
  label        String
  category     String
  icon         String
  description  String
  defaultProps Json     @default("{}") @map("default_props") // GIN index to be added
  active       Boolean  @default(true)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  
  @@map("field_types")
  @@index([category])
  @@index([active])
}

model LookupSource {
  id              String   @id @default(cuid())
  name            String
  type            String   // "static", "module", "form", "api"
  description     String?
  sourceModuleId  String?  @map("source_module_id")
  sourceModule    FormModule? @relation(fields: [sourceModuleId], references: [id], onDelete: Cascade)
  sourceFormId    String?  @map("source_form_id")
  sourceForm      Form?    @relation(fields: [sourceFormId], references: [id], onDelete: Cascade)
  apiEndpoint     String?  @map("api_endpoint")
  staticData      Json?    @map("static_data") // GIN index to be added
  active          Boolean  @default(true)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  
  fieldRelations  LookupFieldRelation[]
  
  @@map("lookup_sources")
  @@index([type])
  @@index([active])
  @@index([sourceModuleId])
  @@index([sourceFormId])
}

model LookupFieldRelation {
  id              String      @id @default(cuid())
  lookupSourceId  String      @map("lookup_source_id")
  lookupSource    LookupSource @relation(fields: [lookupSourceId], references: [id], onDelete: Cascade)
  formFieldId     String      @map("form_field_id")
  formField       FormField   @relation(fields: [formFieldId], references: [id], onDelete: Cascade)
  formId          String      @map("form_id")
  moduleId        String      @map("module_id")
  displayField    String?     @map("display_field")
  valueField      String?     @map("value_field")
  multiple        Boolean?
  searchable      Boolean?
  filters         Json        @default("{}") // GIN index to be added
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  
  @@map("lookup_field_relations")
  @@index([lookupSourceId])
  @@index([formFieldId])
  @@index([formId])
  @@index([moduleId])
}

// RBAC Models - Simplified for designation purposes only
model Role {
  id          String          @id @default(cuid())
  name        String          @unique // e.g., "Manager", "Admin" - just for designation
  description String?         // Optional description of the role
  createdAt   DateTime        @default(now()) @map("created_at")
  updatedAt   DateTime        @updatedAt @map("updated_at")
  
  @@map("roles")
  @@index([name])
}

// Deprecated - keeping for backward compatibility but not used for permissions
model Permission {
  id           String          @id @default(cuid())
  name         String          @unique
  description  String?
  resourceId   String?
  resourceType String?
  createdAt    DateTime        @default(now()) @map("created_at")
  updatedAt    DateTime        @updatedAt @map("updated_at")
  
  @@map("permissions")
  @@index([name])
  @@index([resourceId])
  @@index([resourceType])
}

// Deprecated - keeping for backward compatibility
model RolePermission {
  id           String     @id @default(cuid())
  roleId       String     @map("role_id")
  permissionId String     @map("permission_id")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  
  @@map("role_permissions")
  @@index([roleId])
  @@index([permissionId])
}

// NEW: User-specific permissions table
model UserPermission {
  id           String      @id @default(cuid())
  userId       String      @map("user_id") // References FormRecord15.id
  resourceType String      @map("resource_type") // "module" or "form"
  resourceId   String      @map("resource_id") // FormModule.id or Form.id
  
  // Permission actions
  canView      Boolean     @default(false) @map("can_view")
  canCreate    Boolean     @default(false) @map("can_create")
  canEdit      Boolean     @default(false) @map("can_edit")
  canDelete    Boolean     @default(false) @map("can_delete")
  canManage    Boolean     @default(false) @map("can_manage") // Full control
  
  // System permissions (for admin users)
  isSystemAdmin Boolean    @default(false) @map("is_system_admin")
  
  // Metadata
  grantedBy    String?     @map("granted_by") // Who granted this permission
  grantedAt    DateTime    @default(now()) @map("granted_at")
  expiresAt    DateTime?   @map("expires_at") // Optional expiration
  isActive     Boolean     @default(true) @map("is_active")
  
  createdAt    DateTime    @default(now()) @map("created_at")
  updatedAt    DateTime    @updatedAt @map("updated_at")
  
  @@map("user_permissions")
  @@unique([userId, resourceType, resourceId], name: "unique_user_resource_permission")
  @@index([userId])
  @@index([resourceType])
  @@index([resourceId])
  @@index([isActive])
  @@index([expiresAt])
}
